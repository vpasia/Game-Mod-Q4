windowDef Desktop
{
	rect	0,0,640,480
	visible	1
	nocursor	1
	menugui	0
	)	)
	/	2
	definevec4	"ws_on"	1,0.5,0,1
	definevec4	"ws_off"	0.658,0.639,0.376,0.6
	definevec4	"ws_glowon"	0.7,0.8,0.5,1
	definevec4	"ws_glowoff"	0.7,0.8,0.5,0
	definevec4	"ws_grey"	0.190,0.284,0.168,0.6
	definevec4	"typecolor"	0.866,0.921,0.764,1
	definevec4	"typecolor_strogg"	0.988,1,0.784,1
	definevec4	"healthicon"	0.658,0.639,0.376,0.6
	definevec4	"armoricon"	0.658,0.639,0.376,0.6
	definevec4	"healthicon_mp"	0.980,0.168,0.0196,0.8
	definevec4	"armoricon_mp"	0.968,0.752,0.0156,0.8
	definevec4	"white"	1,1,1,1
	float	"objdone"	0
	float	"weapswitch"	0
	float	"teamstrogg"	0
	float	"hidden"	0
	float	"deathCount"	0
	definefloat	"showGunInfo"	1
	definefloat	"switchLeft"	(640-((gui::weaponcount*30)-2

	onInit {
		namedEvent "updateHealth";
		namedEvent "updateArmor";
		namedEvent "updateAmmo";		
		//namedEvent "clipCheck";
		namedEvent "updatePowerups";
		namedEvent "hideBrackets";
		namedEvent "weaponChange";
		namedEvent "radioChatterDown";
		
		set "gui::selected" "-1"
	}

	onNamedEvent hideHud {
		set "desktop::hidden" "1" ;
		set "p_ammo::visible" "0" ;
		set "p_armor::visible" "0" ;
		set "p_health::visible" "0" ;
		set "p_weapswitch::visible" "0" ;
		set "powerups::visible" "0" ;		
	}

	onNamedEvent showHud {
		set "desktop::hidden" "0" ;
		set "p_ammo::visible" "1" ;
		set "p_armor::visible" "1" ;
		set "p_health::visible" "1" ;
		set "p_weapswitch::visible" "1" ;
		set "powerups::visible" "1" ;	
	}

	onNamedEvent outOfBounds {
		resettime "outofbounds" "0"
	}

	onNamedEvent placeDownWarning {
		resettime "placedownwarning" "0"
	}

	onNamedEvent removeDeathLine {
		if ( "gui::gametype" != 2 ) {
			set "deathhistory1::text" "$deathhistory2::text";
			set "deathhistory1_fade::text" "$deathhistory2::text";
			set "deathhistory2::text" "$deathhistory3::text";
			set "deathhistory3::text" "$deathhistory4::text";
			if ( "desktop::deathCount" >= 4 ) {
				set "desktop::deathCount" "3";
				set "deathhistory4::visible" "0";
				resetTime "deathanim_remove" "0";
			} else if ( "desktop::deathCount" == 3 ) {
				set "desktop::deathCount" "2";
				set "deathhistory3::visible" "0";
				resetTime "deathanim_remove" "0";
			} else if ( "desktop::deathCount" == 2 ) {
				set "desktop::deathCount" "1";
				set "deathhistory2::visible" "0";
				resetTime "deathanim_remove" "0";
			} else if ( "desktop::deathCount" <= 1 ) {
				set "desktop::deathCount" "0";
				set "deathhistory1::visible" "0";
			}
		} else {
			set "deathhistory1_tourney::text" "$deathhistory2_tourney::text";
			set "deathhistory1_fade_tourney::text" "$deathhistory2_tourney::text";
			
			if ( "desktop::deathCount" == 2 ) {
				set "desktop::deathCount" "1";
				set "deathhistory2_tourney::visible" "0";
				resetTime "deathanim_remove" "0";
			} else if ( "desktop::deathCount" <= 1 ) {
				set "desktop::deathCount" "0";
				set "deathhistory1_tourney::visible" "0";
			}
		}		
	}

	onNamedEvent addDeathLine {
		if ( "gui::gametype" != 2 ) {
			if ( "desktop::deathCount" >= 4 ) {
				namedEvent "desktop::removedeathline";
			}
			
			if ( "desktop::deathCount" == 3 ) {
				set "deathhistory4::text" "$gui::deathinfo";
				set "deathhistory4::visible" "1";
				set "desktop::deathCount" "4";
			} else if ( "desktop::deathCount" == 2 ) { 		
				set "deathhistory3::text" "$gui::deathinfo";
				set "deathhistory3::visible" "1";
				set "desktop::deathCount" "3";
			} else if ( "desktop::deathCount" == 1 ) { 		
				set "deathhistory2::text" "$gui::deathinfo";
				set "deathhistory2::visible" "1";
				set "desktop::deathCount" "2";
			} else {
				set "deathhistory1::text" "$gui::deathinfo";
				set "deathhistory1_fade::text" "$gui::deathinfo";
				set "deathhistory1::visible" "1";
				set "desktop::deathCount" "1";
				resetTime "deathanim_remove" "0";
			}
		} else {
			if ( "desktop::deathCount" >= 2 ) {
				namedEvent "desktop::removedeathline";
			}
			
			if ( "desktop::deathCount" == 1 ) { 		
				set "deathhistory2_tourney::text" "$gui::deathinfo";
				set "deathhistory2_tourney::visible" "1";
				set "desktop::deathCount" "2";
			} else {
				set "deathhistory1_tourney::text" "$gui::deathinfo";
				set "deathhistory1_fade_tourney::text" "$gui::deathinfo";
				set "deathhistory1_tourney::visible" "1";
				set "desktop::deathCount" "1";
				resetTime "deathanim_remove" "0";
			}
		}		
	}

	onNamedEvent updateHealth {
		if ( "gui::mp" == 0 )
		{
			if ( "gui::player_healthpct" < 0.26 )
			{
				set "health_valbar::matcolor" "1,0.3,0,0.35" ;
				set "health_val::matcolor" "1,0.3,0,0.5" ;
				set "health_ekg::matcolor" "0.3,0.05,0,1" ;
				set "health_backbar_add::visible" "1" ;
			} else	{
				set "health_valbar::matcolor" "0.698,0.811,0.427,0.2" ;
				set "health_val::matcolor" "0.698,0.811,0.427,0.35" ;
				set "health_ekg::matcolor" "0.0862,0.105,0.0549,1" ;
				set "health_backbar_add::visible" "0" ;
			}	
		} else {
			if ( "gui::player_healthpct" < 0.26 )
			{
				set "health_backbar_add_mp::visible" "1" ;
			} else	{
				set "health_backbar_add_mp::visible" "0" ;
			}	
		}
		
		if ( "gui::player_healthdelta" < 0 )
		{
			resettime "health_amount" "0" ;
		}
	}

	onNamedEvent updateArmor {
		if ( "gui::player_armordelta" < 0 )
		{
			resettime "armor_amount" "0" ;
		}
	}

	onNamedEvent weaponChange {
		//namedEvent "clipCheck";
		
		//-----------------------
		// per weapon ammo bar colors for mp		
		//-----------------------
		if ( "gui::mp" == 1 ) {
			if ( "gui::player_weapon" == 0 ) {
				set "ammo_valbar_mp::matcolor" "0,0.85,1,0.2" ;
				set "ammo_val_mp::matcolor" "0,0.85,1,0.5" ;
			} else if ( "gui::player_weapon" == 1 ) {
				set "ammo_valbar_mp::matcolor" "1,1,0,0.2" ;
				set "ammo_val_mp::matcolor" "1,1,0,0.5" ;
			} else if ( "gui::player_weapon" == 2 ) {
				set "ammo_valbar_mp::matcolor" "1,0.55,0,0.2" ;
				set "ammo_val_mp::matcolor" "1,0.55,0,0.5" ;
			} else if ( "gui::player_weapon" == 3 ) {
				set "ammo_valbar_mp::matcolor" "0,0.45,1,0.2" ;
				set "ammo_val_mp::matcolor" "0,0.45,1,0.5" ;
			} else if ( "gui::player_weapon" == 4 ) {
				set "ammo_valbar_mp::matcolor" "0.2,0.56,0.07,0.2" ;
				set "ammo_val_mp::matcolor" "0.2,0.56,0.07,0.5" ;
			} else if ( "gui::player_weapon" == 5 ) {
				set "ammo_valbar_mp::matcolor" "0.6,0.8,0.8,0.2" ;
				set "ammo_val_mp::matcolor" "0.6,0.8,0.8,0.5" ;
			} else if ( "gui::player_weapon" == 6 ) {
				set "ammo_valbar_mp::matcolor" "1,0.25,0,0.2" ;
				set "ammo_val_mp::matcolor" "1,0.25,0,0.5" ;
			} else if ( "gui::player_weapon" == 7 ) {
				set "ammo_valbar_mp::matcolor" "0,1,0,0.2" ;
				set "ammo_val_mp::matcolor" "0,1,0,0.5" ;
			} else if ( "gui::player_weapon" == 8 ) {
				set "ammo_valbar_mp::matcolor" "1,1,0.6,0.2" ;
				set "ammo_val_mp::matcolor" "1,1,0.6,0.5" ;
			} else if ( "gui::player_weapon" == 9 ) {
				set "ammo_valbar_mp::matcolor" "0.77,0.2,1,0.2" ;
				set "ammo_val_mp::matcolor" "0.77,0.2,1,0.5" ;
			} else if ( "gui::player_weapon" == 10 ) {
				set "ammo_valbar_mp::matcolor" "1,0.75,0.25,0.2" ;
				set "ammo_val_mp::matcolor" "1,0.75,0.25,0.5" ;
			}
		}
		
		//-----------------------		
		// If we had a valid weapon as out last weapon then show the weapon 
		// switch icons.  This check prevents the indicators from coming up
		// when you first start the game.
		//-----------------------	
		
		set "p_weapswitch::visible" "0";
		if ( "gui::player_lastweapon" >= 0 && "desktop::hidden" == 0)
		{
			namedEvent "p_weapswitch::UpdateWeapons";
			set "p_weapswitch::visible" "1";
			set "desktop::weapswitch" "1";
			resettime "p_weapswitch" "0";
		}					
	}

	onNamedEvent weaponFire {
		set "p_weapswitch::visible" "0";
	}

	//onNamedEvent clipCheck {
	//	if ( "gui::player_totalammo" == -1 ) {
	//		set "ammo_amount::visible" "0";	
	//		set "ammo_amount_mp::visible" "0";
	//		set "total_ammo::visible" "0";		
	//		set "ammo_amount_nc::visible" "0";
	//	} else if ( "gui::player_ammo" == -1 || "gui::player_clip_size" < 2 ) {
	//		set "ammo_amount::visible" "0";	
	//		set "ammo_amount_mp::visible" "1";
	//		set "total_ammo::visible" "0";	
	//		set "ammo_amount_nc::visible" "1";
	//	} else {
	//		set "ammo_amount_mp::visible" "1";
	//		set "ammo_amount::visible" "1";	
	//		set "total_ammo::visible" "1";	
	//		set "ammo_amount_nc::visible" "0";
	//	}
	//}

	onNamedEvent itemPickup {
		set "p_itempickup::visible" "1" ;
		resettime "p_itempickup" "0" ;
	}

	onNamedEvent radioChatterUp {
		set "p_radio::visible" "1" ;
		
		transition "rhino::rect" "$rhino::rect" "$d_rhino::rect" "500" ;
		transition "rhino_backbar::rect" "$rhino_backbar::rect" "$d_rhino_backbar::rect" "500" ;
	}

	onNamedEvent radioChatterDown {
		set "p_radio::visible" "0" ;
	}

	onNamedEvent showBrackets {
		set "brackets::alpha" "1";
		set "brackets::visible" "1";
		stopTransitions "brackets";
		resetTime "brackets" "0";
		set "brackets::notime" "1";
	}

	onNamedEvent fadeBrackets {
		resetTime "brackets" "0";
	}

	onNamedEvent hideBrackets {
		stopTransitions "brackets";
		resetTime "brackets" "0";
		set "brackets::notime" "1";
		set "brackets::visible" "0";
	}

	onNamedEvent playerHit {
		resetTime "hit_indicator" "0";	
	}

	onNamedEvent clearPowerups {
		set "gui::powerup0_visible" "0";
		set "gui::powerup1_visible" "0";
		set "gui::powerup2_visible" "0";
		set "gui::powerup3_visible" "0";
		set "gui::powerup4_visible" "0";
		set "gui::powerup_flag_visible" "0";
	}

	onNamedEvent fadeout {
		resettime "anim_fade" "0" ;
	}

	onNamedEvent resetfade {
		set "fade::backcolor" "0,0,0,0" ;
		set "failedtext::forecolor" "0,0,0,0" ;
	}

	onNamedEvent showBossBar {
		set "BossBar::visible" "1";
	}

	onNamedEvent hideBossBar {
		set "BossBar::visible" "0";
	}

	onNamedEvent showRound {
		resettime "round" "0";
	}

	onNamedEvent battleStart {
		resettime "battlestart" "0"
	}

	onNamedEvent notYetUnlocked {
		resettime "notyetunlocked" "0"
	}

	onNamedEvent notEnoughEcon {
		resettime "notenoughecon" "0"
	}

	onNamedEvent toggleMonsterSelection {
		if( "monsterselection1::visible" == 1 )
		{
			set "monsterselection1::visible" "0";
			set "monsterselection2::visible" "1";
		}
		else
		{
			set "monsterselection1::visible" "1";
			set "monsterselection2::visible" "0";
		}
	}

	onNamedEvent showBossShieldBar {
		set "p_boss_shield_bar_left::visible" "1";
		set "p_boss_shield_bar_right::visible" "1";
	}

	onNamedEvent hideBossShieldBar {
		set "p_boss_shield_bar_left::visible" "0";
		set "p_boss_shield_bar_right::visible" "0";
	}

	onNamedEvent showBossShieldWarn {
		set "p_boss_shield_bar_leftwarn::visible" "1";
		set "p_boss_shield_bar_rightwarn::visible" "1";
		set "p_boss_shield_bar_left::visible" "0";
		set "p_boss_shield_bar_right::visible" "0";
	}

	onNamedEvent hideBossShieldWarn {
		set "p_boss_shield_bar_leftwarn::visible" "0";
		set "p_boss_shield_bar_rightwarn::visible" "0";
		set "p_boss_shield_bar_left::visible" "1";
		set "p_boss_shield_bar_right::visible" "1";
	}

	onNamedEvent showExit {
		set "p_exit_level::visible" "1";
		resettime "anim_levelExitAlert" "0";
	}

	onNamedEvent hideExit {
		set "p_exit_level::visible" "0";
	}

	onNamedEvent setTeam_marine {	
		set "health_valbar_mp::matcolor" "0.698,0.811,0.427,0.2" ;
		set "health_val_mp::matcolor" "0.698,0.811,0.427,0.5" ;
		
		set "armor_valbar_mp::matcolor" "0.698,0.811,0.427,0.2" ;
		set "armor_val_mp::matcolor" "0.698,0.811,0.427,0.5" ;
		
		set "powerup_flag_icon::matcolor" "1,0.482,0.0156,0.8";
		
		set "desktop::teamstrogg" "0" ;
	}

	onNamedEvent setTeam_strogg {	
		set "health_valbar_mp::matcolor" "1,0.5,0,0.2" ;
		set "health_val_mp::matcolor" "1,0.5,0,0.5" ;
		
		set "armor_valbar_mp::matcolor" "1,0.5,0,0.2" ;
		set "armor_val_mp::matcolor" "1,0.5,0,0.5" ;
		
		set "powerup_flag_icon::matcolor" "0.415,0.643,0.168,0.8";
		
		set "desktop::teamstrogg" "1" ;
	}

	onNamedEvent enterFlatbed {
		set "p_flatbed::visible" "1";
		set "p_ammo::visible" "0";
		set "p_health::visible" "0";
		set "p_armor::visible" "0";
	}

	onNamedEvent leaveFlatbed {
		set "p_flatbed::visible" "0";
		set "p_ammo::visible" "1";
		set "p_health::visible" "1";
		set "p_armor::visible" "1";
	}

	onNamedEvent saveMessage {
		set "quicksave_msg::forecolor_w" "1" ;
		set "quicksave_msg::visible" "1" ;
		resettime "quicksave_msg" "0" ;
	}

	onNamedEvent missileThreatUp {
		set "missile_indicator::visible" "1";
		resetTime "missile_indicator" "0";	
		
		set "missile_text::visible" "1";
		resetTime "missile_text" "0";	
	}

	onNamedEvent missileThreatDown {
		set "missile_indicator::visible" "0";
		stoptransitions "missile_indicator";	
		set "missile_indicator::matcolor" "1,.1,.1,.7" ;
		
		set "missile_text::visible" "0";
		stoptransitions "missile_text";	
		set "missile_text::forecolor" "1,.1,.1,.7" ;
	}

	onNamedEvent showSpeed {
		set	"speed::visible" "1" ;
	}

	onNamedEvent hideSpeed {
		set "speed::visible" "0" ;
	}

	onNamedEvent showViewComments {
		set "ViewComments::visible" "1";
	}

	onNamedEvent hideViewComments {
		set "ViewComments::visible" "0";
	}

	onNamedEvent updateSlot1 {
		if("gui::selected" == 0)
		{
			set "monster_slot_1::backcolor" "1,1,0.498,1";
		}
		else
		{
			set "monster_slot_1::backcolor" "1,1,1,1";
		}
	}

	onNamedEvent updateSlot2 {
		if("gui::selected" == 1)
		{
			set "monster_slot_2::backcolor" "1,1,0.498,1";
		}
		else
		{
			set "monster_slot_2::backcolor" "1,1,1,1";
		}
	}

	onNamedEvent updateSlot3 {
		if("gui::selected" == 2)
		{
			set "monster_slot_3::backcolor" "1,1,0.498,1";
		}
		else
		{
			set "monster_slot_3::backcolor" "1,1,1,1";
		}
	}

	onNamedEvent updateSlot4 {
		if("gui::selected" == 3)
		{
			set "monster_slot_4::backcolor" "1,1,0.498,1";
		}
		else
		{
			set "monster_slot_4::backcolor" "1,1,1,1";
		}
	}

	onNamedEvent updateSlot5 {
		if("gui::purchased_slot_5" == 1)
		{
			set "monster_slot_5::matcolor" "1,1,1,1";
			
			if("gui::selected" == 4)
			{
				set "monster_slot_5::backcolor" "1,1,0.498,1";
			}
			else
			{
				set "monster_slot_5::backcolor" "1,1,1,1";
			}
		}
		else
		{
			set "monster_slot_5::matcolor" "0,0,0,0.251";
		}
	}

	onNamedEvent updateSlot6 {
		if("gui::purchased_slot_6" == 1)
		{
			set "monster_slot_6::matcolor" "1,1,1,1";
			
			if("gui::selected" == 5)
			{
				set "monster_slot_6::backcolor" "1,1,0.498,1";
			}
			else
			{
				set "monster_slot_6::backcolor" "1,1,1,1";
			}
		}
		else
		{
			set "monster_slot_6::matcolor" "0,0,0,0.251";
		}
	}

	onNamedEvent updateSlot7 {
		if("gui::purchased_slot_7" == 1)
		{
			set "monster_slot_7::matcolor" "1,1,1,1";
			
			if("gui::selected" == 6)
			{
				set "monster_slot_7::backcolor" "1,1,0.498,1";
			}
			else
			{
				set "monster_slot_7::backcolor" "1,1,1,1";
			}
		}
		else
		{
			set "monster_slot_7::matcolor" "0,0,0,0.251";
		}
	}

	onNamedEvent updateSlot8 {
		if("gui::purchased_slot_8" == 1)
		{
			set "monster_slot_8::matcolor" "1,1,1,1";
			
			if("gui::selected" == 7)
			{
				set "monster_slot_8::backcolor" "1,1,0.498,1";
			}
			else
			{
				set "monster_slot_8::backcolor" "1,1,1,1";
			}
		}
		else
		{
			set "monster_slot_8::matcolor" "0,0,0,0.251";
		}
	}

	onNamedEvent updateSlot9 {
		if("gui::purchased_slot_9" == 1)
		{
			set "monster_slot_9::matcolor" "1,1,1,1";
			
			if("gui::selected" == 8)
			{
				set "monster_slot_9::backcolor" "1,1,0.498,1";
			}
			else
			{
				set "monster_slot_9::backcolor" "1,1,1,1";
			}
		}
		else
		{
			set "monster_slot_9::matcolor" "0,0,0,0.251";
		}
	}

	onNamedEvent updateSlot10 {
		if("gui::purchased_slot_10" == 1)
		{
			set "monster_slot_10::matcolor" "1,1,1,1";
			
			if("gui::selected" == 9)
			{
				set "monster_slot_10::backcolor" "1,1,0.498,1";
			}
			else
			{
				set "monster_slot_10::backcolor" "1,1,1,1";
			}
		}
		else
		{
			set "monster_slot_10::matcolor" "0,0,0,0.251";
		}
	}

	windowDef speed
	{
		rect	550,70,80,20
		text	"gui::player_speed"
		font	"fonts/lowpixel"
		textalign	2
		textscale	0.25
		textstyle	1
		forecolor	1,1,1,0.6
		visible	1
	}
	windowDef ViewComments
	{
		rect	2, 5, 638, 200
		backcolor	0, 0, 0, 0
		forecolor	0.9, 0.9, 0.0, 0.9
		visible	0
		textscale	0.25
		text	"gui::viewcomments"
	}
	windowDef BgSOUND
	{
		rect	0 ,0 ,128 ,64
		background	"gfx/guis/soundmeter/audiobg"
		matcolor	1 ,1 ,1 ,1
		visible	("gui::s_debug" == 1)
	}
	windowDef OverlaySOUND
	{
		rect	0 ,0 ,128 ,64
		background	"gfx/guis/soundmeter/audioverlay"
		matcolor	1 ,1 ,1 ,1
		visible	0
	}
	windowDef p_ammo
	{
		rect	0,0,640,480
		visible	("gui::mp" == 0 )
		windowDef ammo_backbar
		{
			rect	256,6,376,61
			visible	1
			background	"gfx/guis/hud/backbar"
			matcolor	0,0,0,0.5
			shear	0,-.22
		}
		windowDef ammo_valbar
		{
			rect	261,4,341,64
			visible	1
			background	"gfx/guis/hud/valbar"
			matcolor	0.701,0.815,0.431,0.2
			shear	0,-.22
		}
		windowDef ammo_amount
		{
			rect	297,19,214,28
			visible	1
			forecolor	0.858,0.913,0.756,1
			text	"gui::player_ammo"
			textscale	0.5
			font	"fonts/chain"
			shear	0,-.22
			textalign	1
		}
	}
	windowDef deathanim_remove
	{
		visible	0
		rect	0,0,1,1

		onTime 0 {
			set "deathhistory1::visible" "1";
			set "deathhistory1_fade::visible" "0";
		}

		onTime +2000 {
			set "deathhistory1::visible" "0";
			set "deathhistory1_fade::visible" "1";
			set "deathhistory1_fade::forecolor" "1,1,.552,1";
			transition "deathhistory1_fade::forecolor_w" "1" "0" 1000;
		}

		onTime +1100 {
			set "deathhistory1_fade::visible" "0";
			namedEvent "removeDeathLine";
		}

	}
	windowDef p_deathhistory
	{
		rect	351,5,284,70
		visible	("gui::gametype" !=2)
		windowDef deathhistory1
		{
			rect	0,3,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
		windowDef deathhistory1_fade
		{
			rect	0,3,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
		windowDef deathhistory2
		{
			rect	0,18,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
		windowDef deathhistory3
		{
			rect	0,33,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
		windowDef deathhistory4
		{
			rect	0,48,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
	}
	windowDef p_deathhistory_tourney
	{
		rect	351,5,284,70
		visible	("gui::gametype" ==2)
		windowDef deathhistory1_tourney
		{
			rect	0,33,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
		windowDef deathhistory1_fade_tourney
		{
			rect	0,33,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
		windowDef deathhistory2_tourney
		{
			rect	0,48,282,18
			forecolor	1,1,.552,1
			textscale	0.25
			font	"fonts/lowpixel"
			visible	0
			textstyle	1
			textalign	2
			nowrap	1
		}
	}
	windowDef brackets
	{
		visible	0
		rect	"gui::bracket_left" - 10, "gui::bracket_top" - 10, "gui::bracket_width" + 20, "gui::bracket_height" + 20
		noclip	1
		notime	1
		float	"alpha"	1

		onTime 400 {
			transition "brackets::alpha" "1" "0" 400;
		}

		onTime +400 {
			set "visible" "0";
		}

		windowDef bracket_text
		{
			rect	-50,-30,"gui::bracket_width"+120,30
			text	"#str_200277"
			font	"fonts/marine"
			textalign	1
			forecolor	0.686,0.870,0.564,"brackets::alpha"
			textscale	.25
		}
		windowDef left_bracket
		{
			rect	0,0,2,"gui::bracket_height" + 20
			backcolor	0.686,0.870,0.564,"brackets::alpha"
			noclip	1
			windowDef lbt_prong
			{
				rect	2,0,5,2
				backcolor	0.686,0.870,0.564,"brackets::alpha"
			}
			windowDef lbb_prong
			{
				rect	2,"gui::bracket_height"+18,5,2
				backcolor	0.686,0.870,0.564,"brackets::alpha"
			}
		}
		windowDef right_bracket
		{
			rect	"gui::bracket_width" + 18,0,2,"gui::bracket_height" + 20
			backcolor	0.686,0.870,0.564,"brackets::alpha"
			visible	1
			noclip	1
			windowDef rbt_prong
			{
				rect	-5,0,5,2
				backcolor	0.686,0.870,0.564,"brackets::alpha"
			}
			windowDef rbb_prong
			{
				rect	-5,"gui::bracket_height"+18,5,2
				backcolor	0.686,0.870,0.564,"brackets::alpha"
			}
		}
	}
	windowDef Bossbar
	{
		rect	-20,0,640,480
		visible	0
		windowDef boss_backbar
		{
			rect	240,40,200,50
			visible	1
			background	"gfx/guis/hud/s_bossbar"
			matcolor	0,0,0,0.5
		}
		windowDef boss_healthicon
		{
			rect	334,75,12,12
			visible	1
			background	"gfx/guis/hud/icons/item_health"
			matcolor	1,1,1,0.2
		}
		windowDef boss_health_bar2
		{
			rect	239,40,200,50
			visible	1
			background	"gfx/guis/hud/s_boss_healthbar"
			matcolor	0.917,0.560,0.0823,0.2
		}
		windowDef boss_shield_bar_left2
		{
			rect	240,40,100,50
			visible	1
			background	"gfx/guis/hud/s_boss_shieldbar"
			matcolor	0.415,0.549,0.541,0.2
		}
		windowDef boss_shield_bar_right2
		{
			rect	340,40,100,50
			visible	1
			background	"gfx/guis/hud/s_boss_shieldbar"
			matcolor	0.415,0.549,0.541,0.2
			matscalex	-1
		}
		windowDef p_boss_health_bar
		{
			rect	266,40,149 * "gui::boss_health" / ("gui::boss_maxhealth" + 1),50
			visible	1
			windowDef boss_health_bar
			{
				rect	-26,0,200,50
				visible	1
				background	"gfx/guis/hud/s_boss_healthbar"
				matcolor	0.917,0.560,0.0823,0.35
			}
		}
		windowDef p_boss_shield_bar_left
		{
			rect	250,40,89 * "gui::boss_shield_percent",50
			visible	0
			windowDef boss_shield_bar_left
			{
				rect	-10,0,100,50
				visible	1
				background	"gfx/guis/hud/s_boss_shieldbar"
				matcolor	0.415,0.549,0.541,0.35
			}
		}
		windowDef p_boss_shield_bar_right
		{
			rect	341 + 89 * ( 1 - "gui::boss_shield_percent" ),40,89,50
			visible	0
			windowDef boss_shield_bar_right
			{
				rect	-90 * ( 1 - "gui::boss_shield_percent" ),0,100,50
				visible	1
				background	"gfx/guis/hud/s_boss_shieldbar"
				matcolor	0.415,0.549,0.541,0.35
				matscalex	-1
			}
		}
		windowDef p_boss_shield_bar_leftwarn
		{
			rect	250,40,89 * "gui::boss_shield_percent",50
			visible	0
			windowDef boss_shield_bar_leftwarn
			{
				rect	-9,0,100,50
				visible	1
				background	"gfx/guis/hud/s_boss_shieldbar"
				matcolor	1,0.25,0,1*guitable_10_5[time*0.002]
			}
		}
		windowDef p_boss_shield_bar_rightwarn
		{
			rect	341 + 89 * ( 1 - "gui::boss_shield_percent" ),40,89,50
			visible	0
			windowDef boss_shield_bar_rightwarn
			{
				rect	-90 * ( 1 - "gui::boss_shield_percent" ),0,100,50
				visible	1
				background	"gfx/guis/hud/s_boss_shieldbar"
				matcolor	1,0.25,0,1*guitable_10_5[time*0.002]
				matscalex	-1
			}
		}
	}
	windowDef missile_indicator
	{
		rect	0,0,640,480
		background	"gfx/guis/hud/directional_hit2"
		matcolor	1,.1,.1,.7
		rotate	"gui::missiledir"
		visible	0
		notime	1

		onTime 0 {
			transition "matcolor_w" "0.7" "0.3" "200" ;
		}

		onTime +200 {
			transition "matcolor_w" "0.3" "0.7" "200" ;
		}

		onTime +400 {
			resettime "0" ;
		}

	}
	windowDef missile_text
	{
		rect	0,61,640,33
		visible	0
		notime	1
		forecolor	1,.1,.1,.7
		text	"#str_200891"
		textscale	0.4
		font	"fonts/marine"
		textalign	1
		textspacing	-2

		onTime 0 {
			transition "forecolor_w" "0.7" "0.3" "200" ;
		}

		onTime +200 {
			transition "forecolor_w" "0.3" "0.7" "200" ;
		}

		onTime +400 {
			resettime "0" ;
		}

	}
	windowDef p_exit_level
	{
		rect	0,0,640,75
		visible	0
		windowDef p_exit_text
		{
			rect	225,36,199,26
			visible	1
			forecolor	1,0.4,0,1
			text	"#str_200013"
			textscale	0.4
			font	"fonts/marine"
			textalign	1
		}
		windowDef p_exit_arr1
		{
			rect	261,11,130,33
			visible	1
			background	"gfx/guis/common/arrow5"
			matcolor	1,0.4,0,0.5
			matscaley	-1

			onTime 0 {
				transition "matcolor_w" ".5" "0" "1000" ;
				transition "rect" "$p_exit_arr1::rect" "$p_exit_arr2::rect" "1000" "300" "300"  ;
			}

			onTime 1000 {
				resettime "0" ;
			}

		}
		windowDef p_exit_arr2
		{
			rect	261,0,130,33
			visible	0
			background	"gfx/guis/common/arrow5"
			matcolor	1,1,1,1
			matscaley	-1
		}
	}
	windowDef quicksave_msg
	{
		rect	0,64,640,20
		visible	0
		forecolor	1,1,1,1
		text	"#str_200908"
		textscale	0.25
		font	"fonts/lowpixel"
		textspacing	0
		textalign	1
		textstyle	1

		onTime 2000 {
			transition "forecolor_w" "1" "0" "1000" ;
		}

		onTime +1000 {
			set "quicksave_msg::visible" "0" ;
		}

	}
	windowDef hit_indicator
	{
		rect	0,0,640,480
		background	"gfx/guis/hud/directional_hit"
		matcolor	1,.1,.1,.7
		rotate	"gui::hitdir"
		visible	0
		notime	1

		onTime 0 {
			set "visible" "1";
			transition "matcolor" "1,.1,.1,.7" "1,.1,.1,0" "500" ;
		}

		onTime +600 {
			set "visible" "0";
		}

	}
	windowDef fade
	{
		rect	0,0,640,480
		backcolor	0,0,0,0
		visible	1
	}
	windowDef failedtext
	{
		rect	0,220,640,20
		visible	1
		forecolor	1,1,1,0
		text	"#str_200279"
		textscale	0.5
		font	"fonts/marine"
		textalign	1
	}
	windowDef anim_fade
	{
		rect	0,0,1,1
		visible	1
		notime	1

		onTime 0 {
			transition "fade::backcolor" "0,0,0,0" "0,0,0,1" "3000" ;
		}

		onTime 3000 {
			transition "failedtext::forecolor" "1,1,1,0" "1,1,1,1" "250" ;
		}

	}
	windowDef anim_levelExitAlert
	{
		rect	0,0,0.1,0.1
		visible	0
		notime	1

		onTime 5000 {
			set "p_exit_level::visible" "0";
		}

	}
	windowDef outofbounds
	{
		rect	0,0,640,480
		visible	0
		notime	1

		onTime 0 {
			set "visible" "1";
			transition "outofbounds_text::forecolor" "1,0,0,1" "1,0,0,0" "800" ;
		}

		onTime +1000 {
			set "visible" "0";
		}

		windowDef outofbounds_text
		{
			rect	0,180,640,82
			visible	1
			forecolor	1,0,0,1
			text	"Out of Bounds!"
			textscale	1
			textalign	1
			textstyle	2
			font	"fonts/marine"
		}
	}
	windowDef placedownwarning
	{
		rect	0,0,640,480
		visible	0
		notime	1

		onTime 0 {
			set "visible" "1";
			transition "placedownwarning_text::forecolor" "1,0,0,1" "1,0,0,0" "800" ;
		}

		onTime +1000 {
			set "visible" "0";
		}

		windowDef placedownwarning_text
		{
			rect	0,180,640,82
			visible	1
			forecolor	1,0,0,1
			text	"No Units Spawned!"
			textscale	1
			textalign	1
			textstyle	2
			font	"fonts/marine"
		}
	}
	windowDef battlestart
	{
		rect	0,0,640,480
		visible	0
		notime	1

		onTime 0 {
			set "visible" "1";
			transition "battlestart_text::forecolor" "0,1,0.247,1" "0,1,0.247,0" "800" ;
		}

		onTime +1000 {
			set "visible" "0";
		}

		windowDef battlestart_text
		{
			rect	0,180,640,82
			visible	1
			forecolor	0,1,0.247,1
			text	"Battle Start!!!"
			textscale	1
			textalign	1
			textstyle	2
			font	"fonts/marine"
		}
	}
	windowDef monsterselection1
	{
		rect	0,350,640,80
		visible	1
		windowDef monster_slot_1
		{
			rect	33,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_slimy_transfer"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_2
		{
			rect	155,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_strogg_marine_mgun"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_3
		{
			rect	277,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_grunt"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_4
		{
			rect	399,-1,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_scientist"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_5
		{
			rect	521,-2,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_convoy_ground"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_1_t
		{
			rect	92,49,25,31
			visible	1
			forecolor	0,0,0,1
			text	"1"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_2_t
		{
			rect	214,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"2"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_3_t
		{
			rect	336,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"3"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_4_t
		{
			rect	458,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"4"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_5_t
		{
			rect	580,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"5"
			textscale	0.5
			font	"fonts/marine"
		}
	}
	windowDef monsterselection2
	{
		rect	0,350,640,80
		visible	0
		windowDef monster_slot_6
		{
			rect	33,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_gunner"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_7
		{
			rect	155,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_berserker"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_8
		{
			rect	277,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_iron_maiden"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_9
		{
			rect	399,0,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_gladiator"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_10
		{
			rect	521,-1,80,80
			visible	1
			backcolor	1,1,1,1
			background	"gfx/monsters/monster_stream_protector"
			matcolor	1,1,1,1
		}
		windowDef monster_slot_6_t
		{
			rect	92,49,25,31
			visible	1
			forecolor	0,0,0,1
			text	"6"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_7_t
		{
			rect	214,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"7"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_8_t
		{
			rect	336,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"8"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_9_t
		{
			rect	458,49,25,30
			visible	1
			forecolor	0,0,0,1
			text	"9"
			textscale	0.5
			font	"fonts/marine"
		}
		windowDef monster_slot_10_t
		{
			rect	563,48,39,30
			visible	1
			forecolor	0,0,0,1
			text	"10"
			textscale	0.5
			font	"fonts/marine"
		}
	}
	windowDef round
	{
		rect	0,0,640,480
		visible	0
		backcolor	0,0,0,1
		notime	1

		onTime 0 {
			set "visible" "1";
		}

		onTime +3000 {
			set "visible" "0";
		}

		windowDef round_text
		{
			rect	0,180,640,100
			visible	1
			forecolor	1,1,1,1
			text	"gui::rtext"
			textscale	1
			textalign	1
			font	"fonts/r_strogg"
		}
	}
	windowDef notyetunlocked
	{
		rect	0,0,640,480
		visible	0
		notime	1

		onTime 0 {
			set "visible" "1";
			transition "notyetunlocked_text::forecolor" "1,0,0,1" "1,0,0,0" "800" ;
		}

		onTime +1000 {
			set "visible" "0";
		}

		windowDef notyetunlocked_text
		{
			rect	0,180,640,82
			visible	1
			forecolor	1,0,0,1
			text	"Unit Not Yet Unlocked!"
			textscale	0.9
			textalign	1
			textstyle	2
			font	"fonts/marine"
		}
	}
	windowDef notenoughecon
	{
		rect	0,0,640,480
		visible	0
		notime	1

		onTime 0 {
			set "visible" "1";
			transition "notenoughecon_text::forecolor" "1,0,0,1" "1,0,0,0" "800" ;
		}

		onTime +1000 {
			set "visible" "0";
		}

		windowDef notenoughecon_text
		{
			rect	0,180,640,82
			visible	1
			forecolor	1,0,0,1
			text	"No Enough Econ!"
			textscale	1
			textalign	1
			textstyle	2
			font	"fonts/marine"
		}
	}
}
